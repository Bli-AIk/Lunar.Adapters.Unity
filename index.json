{
  "api/Lunar.Adapters.Unity.DebugLogAdapter.html": {
    "href": "api/Lunar.Adapters.Unity.DebugLogAdapter.html",
    "title": "Class DebugLogAdapter | LunarForUnity | 0.1.0",
    "summary": "Class DebugLogAdapter Inheritance object DebugLogAdapter Namespace: Lunar.Adapters.Unity Assembly: .dll Syntax public class DebugLogAdapter : Core.Base.Interfaces.ILogger Methods Log(object, object) Declaration public void Log(object message, object context = null) Parameters Type Name Description object message object context LogError(object, object) Declaration public void LogError(object message, object context = null) Parameters Type Name Description object message object context LogWarning(object, object) Declaration public void LogWarning(object message, object context = null) Parameters Type Name Description object message object context"
  },
  "api/Lunar.Adapters.Unity.GameBootstrap.html": {
    "href": "api/Lunar.Adapters.Unity.GameBootstrap.html",
    "title": "Class GameBootstrap | LunarForUnity | 0.1.0",
    "summary": "Class GameBootstrap Inheritance object GameBootstrap Namespace: Lunar.Adapters.Unity Assembly: .dll Syntax public abstract class GameBootstrap : MonoBehaviour Methods Awake() Declaration public void Awake() ServiceRegistry() Declaration public abstract ServiceRegistry ServiceRegistry() Returns Type Description ServiceRegistry"
  },
  "api/Lunar.Adapters.Unity.GameController.html": {
    "href": "api/Lunar.Adapters.Unity.GameController.html",
    "title": "Class GameController | LunarForUnity | 0.1.0",
    "summary": "Class GameController Inheritance object GameController Namespace: Lunar.Adapters.Unity Assembly: .dll Syntax public class GameController : MonoBehaviour Properties Services Declaration public static ServiceRegistry Services { get; } Property Value Type Description ServiceRegistry ServicesFactory External replacement service factory Declaration public static Func<ServiceRegistry> ServicesFactory { get; set; } Property Value Type Description Func<ServiceRegistry> Methods DefaultServicesFactory() Default service configuration Declaration public static ServiceRegistry DefaultServicesFactory() Returns Type Description ServiceRegistry"
  },
  "api/Lunar.Adapters.Unity.InputActionsAdapter.html": {
    "href": "api/Lunar.Adapters.Unity.InputActionsAdapter.html",
    "title": "Class InputActionsAdapter | LunarForUnity | 0.1.0",
    "summary": "Class InputActionsAdapter Inheritance object InputActionsAdapter Namespace: Lunar.Adapters.Unity Assembly: .dll Syntax public class InputActionsAdapter : IInputActions Constructors InputActionsAdapter(IInput, Dictionary<string, KeyCodeBase[]>) Declaration public InputActionsAdapter(IInput input, Dictionary<string, KeyCodeBase[]> bindings) Parameters Type Name Description IInput input Dictionary<string, KeyCodeBase[]> bindings Properties Bindings Declaration public Dictionary<string, KeyCodeBase[]> Bindings { get; } Property Value Type Description Dictionary<string, KeyCodeBase[]> Input Declaration public IInput Input { get; } Property Value Type Description IInput Methods ClearBindings() Declaration public void ClearBindings() GetAction(string) Declaration public bool GetAction(string action) Parameters Type Name Description string action Returns Type Description bool GetActionDown(string) Declaration public bool GetActionDown(string action) Parameters Type Name Description string action Returns Type Description bool GetActionUp(string) Declaration public bool GetActionUp(string action) Parameters Type Name Description string action Returns Type Description bool RemoveBinding(string) Declaration public bool RemoveBinding(string action) Parameters Type Name Description string action Returns Type Description bool SetBinding(string, params KeyCodeBase[]) Declaration public bool SetBinding(string action, params KeyCodeBase[] keys) Parameters Type Name Description string action KeyCodeBase[] keys Returns Type Description bool"
  },
  "api/Lunar.Adapters.Unity.InputAdapter.html": {
    "href": "api/Lunar.Adapters.Unity.InputAdapter.html",
    "title": "Class InputAdapter | LunarForUnity | 0.1.0",
    "summary": "Class InputAdapter Inheritance object InputAdapter Namespace: Lunar.Adapters.Unity Assembly: .dll Syntax public class InputAdapter : IInput Methods GetKey(KeyCodeBase) Declaration public bool GetKey(KeyCodeBase keycode) Parameters Type Name Description KeyCodeBase keycode Returns Type Description bool GetKeyDown(KeyCodeBase) Declaration public bool GetKeyDown(KeyCodeBase keycode) Parameters Type Name Description KeyCodeBase keycode Returns Type Description bool GetKeyUp(KeyCodeBase) Declaration public bool GetKeyUp(KeyCodeBase keycode) Parameters Type Name Description KeyCodeBase keycode Returns Type Description bool"
  },
  "api/Lunar.Adapters.Unity.KeyCodeConverter.html": {
    "href": "api/Lunar.Adapters.Unity.KeyCodeConverter.html",
    "title": "Class KeyCodeConverter | LunarForUnity | 0.1.0",
    "summary": "Class KeyCodeConverter Inheritance object KeyCodeConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Lunar.Adapters.Unity Assembly: .dll Syntax public static class KeyCodeConverter Methods ToUnity(KeyCodeBase) Declaration public static UnityEngine.KeyCode ToUnity(this KeyCodeBase key) Parameters Type Name Description KeyCodeBase key Returns Type Description KeyCode"
  },
  "api/Lunar.Adapters.Unity.ResourcesAdapter.html": {
    "href": "api/Lunar.Adapters.Unity.ResourcesAdapter.html",
    "title": "Class ResourcesAdapter | LunarForUnity | 0.1.0",
    "summary": "Class ResourcesAdapter Inheritance object ResourcesAdapter Implements IResourcesAsync Namespace: Lunar.Adapters.Unity Assembly: .dll Syntax public class ResourcesAdapter : IResources, IResourcesAsync Methods LoadAllAsync<T>(IEnumerable<string>, CancellationToken) Declaration public Task<IEnumerable<T>> LoadAllAsync<T>(IEnumerable<string> paths, CancellationToken ct = default) Parameters Type Name Description IEnumerable<string> paths CancellationToken ct Returns Type Description Task<IEnumerable<T>> Type Parameters Name Description T LoadAllAsync<T>(string, CancellationToken) Declaration public Task<IEnumerable<T>> LoadAllAsync<T>(string path, CancellationToken ct = default) Parameters Type Name Description string path CancellationToken ct Returns Type Description Task<IEnumerable<T>> Type Parameters Name Description T LoadAll<T>(IEnumerable<string>) Declaration public IEnumerable<T> LoadAll<T>(IEnumerable<string> paths) Parameters Type Name Description IEnumerable<string> paths Returns Type Description IEnumerable<T> Type Parameters Name Description T LoadAll<T>(string) Declaration public IEnumerable<T> LoadAll<T>(string path) Parameters Type Name Description string path Returns Type Description IEnumerable<T> Type Parameters Name Description T LoadAsync<T>(string, CancellationToken) Declaration public Task<T> LoadAsync<T>(string path, CancellationToken ct = default) Parameters Type Name Description string path CancellationToken ct Returns Type Description Task<T> Type Parameters Name Description T Load<T>(string) Declaration public T Load<T>(string path) Parameters Type Name Description string path Returns Type Description T Type Parameters Name Description T Release<T>(T) Declaration public void Release<T>(T resource) Parameters Type Name Description T resource Type Parameters Name Description T Implements IResourcesAsync"
  },
  "api/Lunar.Adapters.Unity.ResourcesUtility.html": {
    "href": "api/Lunar.Adapters.Unity.ResourcesUtility.html",
    "title": "Class ResourcesUtility | LunarForUnity | 0.1.0",
    "summary": "Class ResourcesUtility Inheritance object ResourcesUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Lunar.Adapters.Unity Assembly: .dll Syntax public static class ResourcesUtility Methods ValidateUnityObjectType<T>() Declaration public static void ValidateUnityObjectType<T>() Type Parameters Name Description T ValidateUnityObjectType<T>(string) Declaration public static void ValidateUnityObjectType<T>(string methodName) Parameters Type Name Description string methodName Type Parameters Name Description T"
  },
  "api/Lunar.Adapters.Unity.ServiceRegistry.html": {
    "href": "api/Lunar.Adapters.Unity.ServiceRegistry.html",
    "title": "Class ServiceRegistry | LunarForUnity | 0.1.0",
    "summary": "Class ServiceRegistry Inheritance object ServiceRegistry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Lunar.Adapters.Unity Assembly: .dll Syntax public class ServiceRegistry Properties InputActions Declaration public IInputActions InputActions { get; set; } Property Value Type Description IInputActions Logger Declaration public ILogger Logger { get; set; } Property Value Type Description ILogger Resources Declaration public IResources Resources { get; set; } Property Value Type Description IResources ResourcesAsync Declaration public IResourcesAsync ResourcesAsync { get; set; } Property Value Type Description IResourcesAsync"
  },
  "api/Lunar.Adapters.Unity.Systems.DebugCreateObjectSystem.html": {
    "href": "api/Lunar.Adapters.Unity.Systems.DebugCreateObjectSystem.html",
    "title": "Class DebugCreateObjectSystem | LunarForUnity | 0.1.0",
    "summary": "Class DebugCreateObjectSystem Inheritance object DebugCreateObjectSystem Namespace: Lunar.Adapters.Unity.Systems Assembly: .dll Syntax public class DebugCreateObjectSystem : BaseSystem<World, float> Constructors DebugCreateObjectSystem(World) Declaration public DebugCreateObjectSystem(World world) Parameters Type Name Description World world Methods Initialize() Declaration public override void Initialize() Update(in float) Declaration public override void Update(in float deltaTime) Parameters Type Name Description float deltaTime"
  },
  "api/Lunar.Adapters.Unity.Systems.GameObjectSyncSystem.html": {
    "href": "api/Lunar.Adapters.Unity.Systems.GameObjectSyncSystem.html",
    "title": "Class GameObjectSyncSystem | LunarForUnity | 0.1.0",
    "summary": "Class GameObjectSyncSystem Inheritance object GameObjectSyncSystem Namespace: Lunar.Adapters.Unity.Systems Assembly: .dll Syntax public class GameObjectSyncSystem : GameObjectSyncSystemBase Constructors GameObjectSyncSystem(World) Declaration public GameObjectSyncSystem(World world) Parameters Type Name Description World world Methods SyncName(GameObjectComponent, NameComponent) Declaration protected override void SyncName(GameObjectComponent gameObject, NameComponent name) Parameters Type Name Description GameObjectComponent gameObject NameComponent name SyncTransform(GameObjectComponent, TransformComponent) Declaration protected override void SyncTransform(GameObjectComponent gameObject, TransformComponent transform) Parameters Type Name Description GameObjectComponent gameObject TransformComponent transform"
  },
  "api/Lunar.Adapters.Unity.Systems.SpriteCleanSystem.html": {
    "href": "api/Lunar.Adapters.Unity.Systems.SpriteCleanSystem.html",
    "title": "Class SpriteCleanSystem | LunarForUnity | 0.1.0",
    "summary": "Class SpriteCleanSystem Inheritance object SpriteCleanSystem Namespace: Lunar.Adapters.Unity.Systems Assembly: .dll Syntax public class SpriteCleanSystem : SpriteCleanSystemBase Constructors SpriteCleanSystem(World) Declaration public SpriteCleanSystem(World world) Parameters Type Name Description World world Methods CleanSprite(SpriteComponent) Declaration protected override void CleanSprite(SpriteComponent sprite) Parameters Type Name Description SpriteComponent sprite"
  },
  "api/Lunar.Adapters.Unity.Systems.SpriteSyncSystem.html": {
    "href": "api/Lunar.Adapters.Unity.Systems.SpriteSyncSystem.html",
    "title": "Class SpriteSyncSystem | LunarForUnity | 0.1.0",
    "summary": "Class SpriteSyncSystem Inheritance object SpriteSyncSystem Namespace: Lunar.Adapters.Unity.Systems Assembly: .dll Syntax public class SpriteSyncSystem : SpriteSyncSystemBase Constructors SpriteSyncSystem(World, IResources, ILogger?) Declaration public SpriteSyncSystem(World world, IResources resources, ILogger? logger = null) Parameters Type Name Description World world IResources resources ILogger? logger SpriteSyncSystem(World, IResourcesAsync, ILogger?) Declaration public SpriteSyncSystem(World world, IResourcesAsync resourcesAsync, ILogger? logger = null) Parameters Type Name Description World world IResourcesAsync resourcesAsync ILogger? logger Methods SyncSprite(SpriteComponent) Declaration protected override Task<SpriteComponent> SyncSprite(SpriteComponent sprite) Parameters Type Name Description SpriteComponent sprite Returns Type Description Task<SpriteComponent>"
  },
  "api/Lunar.Adapters.Unity.Systems.html": {
    "href": "api/Lunar.Adapters.Unity.Systems.html",
    "title": "Namespace Lunar.Adapters.Unity.Systems | LunarForUnity | 0.1.0",
    "summary": "Namespace Lunar.Adapters.Unity.Systems Classes DebugCreateObjectSystem GameObjectSyncSystem SpriteCleanSystem SpriteSyncSystem"
  },
  "api/Lunar.Adapters.Unity.Tests.KeyCodeConverterTests.html": {
    "href": "api/Lunar.Adapters.Unity.Tests.KeyCodeConverterTests.html",
    "title": "Class KeyCodeConverterTests | LunarForUnity | 0.1.0",
    "summary": "Class KeyCodeConverterTests Inheritance object KeyCodeConverterTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Lunar.Adapters.Unity.Tests Assembly: .dll Syntax public class KeyCodeConverterTests Methods All_LunarKeyCodes_MapTo_UnityEngineKeyCode() Declaration public void All_LunarKeyCodes_MapTo_UnityEngineKeyCode()"
  },
  "api/Lunar.Adapters.Unity.Tests.ResourcesAdapterTests.html": {
    "href": "api/Lunar.Adapters.Unity.Tests.ResourcesAdapterTests.html",
    "title": "Class ResourcesAdapterTests | LunarForUnity | 0.1.0",
    "summary": "Class ResourcesAdapterTests Inheritance object ResourcesAdapterTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Lunar.Adapters.Unity.Tests Assembly: .dll Syntax public class ResourcesAdapterTests Methods LoadAll_ByFolder_ReturnsAll() Declaration public void LoadAll_ByFolder_ReturnsAll() LoadAll_ByPathsEnumerable_ReturnsEach() Declaration public void LoadAll_ByPathsEnumerable_ReturnsEach() Load_TextAsset_ReturnsAsset() Declaration public void Load_TextAsset_ReturnsAsset() Release_TextAsset_DoesNotThrow() Declaration public void Release_TextAsset_DoesNotThrow() SetUp() Declaration public void SetUp()"
  },
  "api/Lunar.Adapters.Unity.Tests.ResourcesUtilityTests.html": {
    "href": "api/Lunar.Adapters.Unity.Tests.ResourcesUtilityTests.html",
    "title": "Class ResourcesUtilityTests | LunarForUnity | 0.1.0",
    "summary": "Class ResourcesUtilityTests Inheritance object ResourcesUtilityTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Lunar.Adapters.Unity.Tests Assembly: .dll Syntax public class ResourcesUtilityTests Methods ValidateUnityObjectType_AllowsUnityObjectType() Declaration public void ValidateUnityObjectType_AllowsUnityObjectType() ValidateUnityObjectType_ThrowsForNonUnityType_NoMethodName() Declaration public void ValidateUnityObjectType_ThrowsForNonUnityType_NoMethodName() ValidateUnityObjectType_ThrowsForNonUnityType_WithMethodName() Declaration public void ValidateUnityObjectType_ThrowsForNonUnityType_WithMethodName()"
  },
  "api/Lunar.Adapters.Unity.Tests.html": {
    "href": "api/Lunar.Adapters.Unity.Tests.html",
    "title": "Namespace Lunar.Adapters.Unity.Tests | LunarForUnity | 0.1.0",
    "summary": "Namespace Lunar.Adapters.Unity.Tests Classes KeyCodeConverterTests ResourcesAdapterTests ResourcesUtilityTests"
  },
  "api/Lunar.Adapters.Unity.Utils.UnityConversionUtils.html": {
    "href": "api/Lunar.Adapters.Unity.Utils.UnityConversionUtils.html",
    "title": "Class UnityConversionUtils | LunarForUnity | 0.1.0",
    "summary": "Class UnityConversionUtils Inheritance object UnityConversionUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Lunar.Adapters.Unity.Utils Assembly: .dll Syntax public static class UnityConversionUtils Methods TryParseToUnity(GameObjectComponent, out GameObject) Declaration public static bool TryParseToUnity(this GameObjectComponent gameObject, out UnityEngine.GameObject unityGameObject) Parameters Type Name Description GameObjectComponent gameObject GameObject unityGameObject Returns Type Description bool TryParseToUnity(SpriteComponent, out SpriteRenderer) Declaration public static bool TryParseToUnity(this SpriteComponent sprite, out UnityEngine.SpriteRenderer unitySpriteRenderer) Parameters Type Name Description SpriteComponent sprite SpriteRenderer unitySpriteRenderer Returns Type Description bool"
  },
  "api/Lunar.Adapters.Unity.Utils.html": {
    "href": "api/Lunar.Adapters.Unity.Utils.html",
    "title": "Namespace Lunar.Adapters.Unity.Utils | LunarForUnity | 0.1.0",
    "summary": "Namespace Lunar.Adapters.Unity.Utils Classes UnityConversionUtils"
  },
  "api/Lunar.Adapters.Unity.html": {
    "href": "api/Lunar.Adapters.Unity.html",
    "title": "Namespace Lunar.Adapters.Unity | LunarForUnity | 0.1.0",
    "summary": "Namespace Lunar.Adapters.Unity Classes DebugLogAdapter GameBootstrap GameController InputActionsAdapter InputAdapter KeyCodeConverter ResourcesAdapter ResourcesUtility ServiceRegistry"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "| LunarForUnity | 0.1.0",
    "summary": "This is the documentation for the Scripting APIs of this package."
  },
  "index.html": {
    "href": "index.html",
    "title": "| LunarForUnity | 0.1.0",
    "summary": "This page redirects to the manual."
  },
  "license/LICENSE.html": {
    "href": "license/LICENSE.html",
    "title": "| LunarForUnity | 0.1.0",
    "summary": "GNU LESSER GENERAL PUBLIC LICENSE Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/ Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. This version of the GNU Lesser General Public License incorporates the terms and conditions of version 3 of the GNU General Public License, supplemented by the additional permissions listed below. Additional Definitions. As used herein, \"this License\" refers to version 3 of the GNU Lesser General Public License, and the \"GNU GPL\" refers to version 3 of the GNU General Public License. \"The Library\" refers to a covered work governed by this License, other than an Application or a Combined Work as defined below. An \"Application\" is any work that makes use of an interface provided by the Library, but which is not otherwise based on the Library. Defining a subclass of a class defined by the Library is deemed a mode of using an interface provided by the Library. A \"Combined Work\" is a work produced by combining or linking an Application with the Library. The particular version of the Library with which the Combined Work was made is also called the \"Linked Version\". The \"Minimal Corresponding Source\" for a Combined Work means the Corresponding Source for the Combined Work, excluding any source code for portions of the Combined Work that, considered in isolation, are based on the Application, and not on the Linked Version. The \"Corresponding Application Code\" for a Combined Work means the object code and/or source code for the Application, including any data and utility programs needed for reproducing the Combined Work from the Application, but excluding the System Libraries of the Combined Work. Exception to Section 3 of the GNU GPL. You may convey a covered work under sections 3 and 4 of this License without being bound by section 3 of the GNU GPL. Conveying Modified Versions. If you modify a copy of the Library, and, in your modifications, a facility refers to a function or data to be supplied by an Application that uses the facility (other than as an argument passed when the facility is invoked), then you may convey a copy of the modified version: a) under this License, provided that you make a good faith effort to ensure that, in the event an Application does not supply the function or data, the facility still operates, and performs whatever part of its purpose remains meaningful, or b) under the GNU GPL, with none of the additional permissions of this License applicable to that copy. Object Code Incorporating Material from Library Header Files. The object code form of an Application may incorporate material from a header file that is part of the Library. You may convey such object code under terms of your choice, provided that, if the incorporated material is not limited to numerical parameters, data structure layouts and accessors, or small macros, inline functions and templates (ten or fewer lines in length), you do both of the following: a) Give prominent notice with each copy of the object code that the Library is used in it and that the Library and its use are covered by this License. b) Accompany the object code with a copy of the GNU GPL and this license document. Combined Works. You may convey a Combined Work under terms of your choice that, taken together, effectively do not restrict modification of the portions of the Library contained in the Combined Work and reverse engineering for debugging such modifications, if you also do each of the following: a) Give prominent notice with each copy of the Combined Work that the Library is used in it and that the Library and its use are covered by this License. b) Accompany the Combined Work with a copy of the GNU GPL and this license document. c) For a Combined Work that displays copyright notices during execution, include the copyright notice for the Library among these notices, as well as a reference directing the user to the copies of the GNU GPL and this license document. d) Do one of the following: 0) Convey the Minimal Corresponding Source under the terms of this License, and the Corresponding Application Code in a form suitable for, and under terms that permit, the user to recombine or relink the Application with a modified version of the Linked Version to produce a modified Combined Work, in the manner specified by section 6 of the GNU GPL for conveying Corresponding Source. 1) Use a suitable shared library mechanism for linking with the Library. A suitable mechanism is one that (a) uses at run time a copy of the Library already present on the user's computer system, and (b) will operate properly with a modified version of the Library that is interface-compatible with the Linked Version. e) Provide Installation Information, but only if you would otherwise be required to provide such information under section 6 of the GNU GPL, and only to the extent that such information is necessary to install and execute a modified version of the Combined Work produced by recombining or relinking the Application with a modified version of the Linked Version. (If you use option 4d0, the Installation Information must accompany the Minimal Corresponding Source and Corresponding Application Code. If you use option 4d1, you must provide the Installation Information in the manner specified by section 6 of the GNU GPL for conveying Corresponding Source.) Combined Libraries. You may place library facilities that are a work based on the Library side by side in a single library together with other library facilities that are not Applications and are not covered by this License, and convey such a combined library under terms of your choice, if you do both of the following: a) Accompany the combined library with a copy of the same work based on the Library, uncombined with any other library facilities, conveyed under the terms of this License. b) Give prominent notice with the combined library that part of it is a work based on the Library, and explaining where to find the accompanying uncombined form of the same work. Revised Versions of the GNU Lesser General Public License. The Free Software Foundation may publish revised and/or new versions of the GNU Lesser General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Library as you received it specifies that a certain numbered version of the GNU Lesser General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that published version or of any later version published by the Free Software Foundation. If the Library as you received it does not specify a version number of the GNU Lesser General Public License, you may choose any version of the GNU Lesser General Public License ever published by the Free Software Foundation. If the Library as you received it specifies that a proxy can decide whether future versions of the GNU Lesser General Public License shall apply, that proxy's public statement of acceptance of any version is permanent authorization for you to choose that version for the Library."
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "Lunar.Adapters.Unity | LunarForUnity | 0.1.0",
    "summary": "Lunar.Adapters.Unity Status: \uD83D\uDEA7 Initial iteration (features and structure subject to frequent changes) This repository contains the Unity adapter for the Lunar game core library. It provides all the necessary components to integrate the pure C# and engine-agnostic Lunar ECS framework into the Unity engine. The core Lunar library is based on Arch-ECS, and its license can be found here. This README is temporary. License Lunar.Adapters.Unity is available under a dual-license model: Open Source License (LGPL-3.0) You may use Lunar.Adapters.Unity in closed-source Unity projects as long as you do not modify the adapter's source code. If you modify this adapter (e.g. add/change core modules or integrations), you must release those modifications under the same license (LGPL-3.0). Your own game/application code may remain closed-source. Commercial License If you wish to modify Lunar.Adapters.Unity and keep those modifications closed-source, or include this adapter in a project where LGPL is not acceptable, you can contact me for a commercial license. 状态：\uD83D\uDEA7 初始迭代中（功能与结构可能频繁变动） 此仓库包含 Lunar 游戏核心库的 Unity 适配器。它提供了所有必需的组件，用于将纯 C#、引擎无关的 Lunar ECS 框架集成到 Unity 引擎中。 核心的 Lunar 库基于 Arch-ECS 开发。在 这里 查阅 Arch-ECS 的许可证。 此 Readme 是临时的。 许可证 Lunar.Adapters.Unity 采用双重许可模式： 开源许可证（LGPL-3.0） 只要您不修改本适配器的源代码，就可以在闭源的 Unity 项目中使用 Lunar.Adapters.Unity。 如果您修改了本适配器（例如添加 / 更改核心模块或集成），您必须在相同的许可证（LGPL-3.0）下发布这些修改。 您自己的游戏 / 应用程序代码可以保持闭源。 商业许可 如果您希望修改 Lunar.Adapters.Unity 并保持这些修改闭源，或在不接受 LGPL 的项目中包含此适配器，您可以联系我以获取商业许可。"
  }
}